apply plugin: 'com.android.library'
apply plugin: 'maven'


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64','armeabi','armeabi-v8a',
        }

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            if (IsBuildMudle.toBoolean()) {
                java.srcDirs += "src/main/debug/java/";
            } else {
                java.srcDirs += "src/main/release/java/";
            }
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'jsr305'
    })
    testImplementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-compiler"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
//    api project(":core")
    api project(":updatelibary")
    api project(":picture_library")
    api project(":refresh-layout")
    api project(":common")
}
uploadArchives {
    configuration = configurations.archives
    repositories{
        mavenDeployer{
            repository(url: 'http://127.0.0.1:8081/repository/common/') {
                //你Nexus的账户密码
                authentication(userName: 'admin', password: 'admin123')
            }
            pom.project {
                version '1.2.0'
                artifactId 'common'
                groupId 'com.docker.common'
                packaging 'aar'
                description '通用工具层，提供给core以及上层'
            }
        }
    }

}