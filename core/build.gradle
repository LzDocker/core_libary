apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.<LzDocker>'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
//                arguments = [moduleName           : project.getName(),
////                             "room.schemaLocation":
////                                     "$projectDir/schemas".toString()]
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
//    lintOptions {
//        // 如果为 true，则当lint发现错误时停止 gradle构建
//        abortOnError false
//    }
    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources', 'src/main/resources/']
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["room-runtime"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["lifecycle-runtime"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["arouter"]
    api rootProject.ext.dependencies["util"]
    api rootProject.ext.dependencies["rxpermissions"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxrelay"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["StatusBar"]
    api rootProject.ext.dependencies["dagger"]
    api rootProject.ext.dependencies["dagger-android"]
    api rootProject.ext.dependencies["dagger-android-support"]
    api rootProject.ext.dependencies["design"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-compiler"]

}
//uploadArchives {
//    configuration = configurations.archives
//    repositories{
//        mavenDeployer{
//            repository(url: 'http://127.0.0.1:8081/repository/core/') {
//                //你Nexus的账户密码
//                authentication(userName: 'admin', password: 'admin123')
//            }
//            pom.project {
//                version '1.2.4'
//                artifactId 'core'
//                groupId 'com.docker.core'
//                packaging 'aar'
//                description '基础类库层'
//            }
//        }
//    }
//
//}