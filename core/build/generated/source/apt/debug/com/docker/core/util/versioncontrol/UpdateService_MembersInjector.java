// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.docker.core.util.versioncontrol;

import com.docker.core.di.module.httpmodule.progress.ProgressManager;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class UpdateService_MembersInjector implements MembersInjector<UpdateService> {
  private final Provider<ProgressManager> progressManagerProvider;

  public UpdateService_MembersInjector(Provider<ProgressManager> progressManagerProvider) {
    assert progressManagerProvider != null;
    this.progressManagerProvider = progressManagerProvider;
  }

  public static MembersInjector<UpdateService> create(
      Provider<ProgressManager> progressManagerProvider) {
    return new UpdateService_MembersInjector(progressManagerProvider);
  }

  @Override
  public void injectMembers(UpdateService instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.progressManager = progressManagerProvider.get();
  }

  public static void injectProgressManager(
      UpdateService instance, Provider<ProgressManager> progressManagerProvider) {
    instance.progressManager = progressManagerProvider.get();
  }
}
